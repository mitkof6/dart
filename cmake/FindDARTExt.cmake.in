# Find DART Externals
#
# This sets the following variables:
# DARTExt_FOUND - If all the Dart externals were found or not
# DARTExt_INCLUDE_DIRS - Directories containing the DART external include files.
# DARTExt_LIBRARIES - Libraries needed to use DART External.
# DARTExt_DEFINITIONS - Compiler flags for DART External.

find_package(PkgConfig QUIET)

# Eigen
find_path(EIGEN3_INCLUDE_DIR
    NAMES Eigen/Core
    PATHS "@CMAKE_INSTALL_PREFIX@/include"
    PATH_SUFFIXES eigen3 eigen)

# OpenGL
find_package(OpenGL REQUIRED)

# GLUT
if(WIN32 AND NOT CYGWIN)
    set(GLUT_INCLUDE_DIR "@CMAKE_INSTALL_PREFIX@/include")
    set(GLUT_LIBRARIES glut32)
else()
    find_package(GLUT REQUIRED)
    set(GLUT_LIBRARIES ${GLUT_glut_LIBRARY})
endif()

# Boost and Assimp Boost Workaround
find_package(Boost REQUIRED system filesystem)

if(MSVC OR MSVC90 OR MSVC10)
    add_definitions(-DBOOST_ALL_NO_LIB)
endif()
add_definitions(-DBOOST_TEST_DYN_LINK)
set(Boost_USE_MULTITHREADED ON)
set(Boost_USE_STATIC_RUNTIME OFF)

# CCD
pkg_check_modules(PC_CCD ccd)
find_path(CCD_INCLUDE_DIR ccd/ccd.h
    HINTS ${PC_CCD_INCLUDEDIR}
    PATHS "@CMAKE_INSTALL_PREFIX@/include")
set(CCD_LIBRARY ccd)

# FCL
pkg_check_modules(PC_FCL fcl)
find_path(FCL_INCLUDE_DIR fcl/collision.h
    HINTS ${PC_FCL_INCLUDEDIR}
    PATHS "@CMAKE_INSTALL_PREFIX@/include")
set(FCL_LIBRARY fcl)

# Assimp
find_path(ASSIMP_INCLUDE_DIR assimp/scene.h
    PATHS "@CMAKE_INSTALL_PREFIX@/include")
set(ASSIMP_LIBRARY assimp)

#TinyXML
find_path(TINYXML_INCLUDE_DIR tinyxml.h
    PATHS "@CMAKE_INSTALL_PREFIX@/include")
set(TINYXML_LIBRARY tinyxml)

# Tinyxml2
find_path(TINYXML2_INCLUDE_DIR tinyxml2.h
PATHS "@CMAKE_INSTALL_PREFIX@/include")
set(TINYXML2_LIBRARY tinyxml2)

# urdfdom
find_package(urdfdom REQUIRED)

set(urdfdom_LIBRARIES urdfdom_sensor urdfdom_model_state urdfdom_model urdfdom_world console_bridge)

# SDFormat
find_package(SDFormat REQUIRED)

set(DARTExt_LIBRARY_DIRS "@CMAKE_INSTALL_PREFIX@/lib" ${Boost_LIBRARY_DIRS} ${urdfdom_LIBRARY_DIRS} ${SDFormat_LIBRARY_DIRS})

set(DARTExt_LIBS ${FCL_LIBRARY} ${TINYXML_LIBRARY} ${TINYXML2_LIBRARY} ${urdfdom_LIBRARIES} ${SDFormat_LIBRARIES})
set(DARTExt_LIBS_NO_DEBUG ${CCD_LIBRARY} ${ASSIMP_LIBRARY} ${GLUT_LIBRARY} ${OPENGL_LIBRARIES} ${Boost_LIBRARIES})

if(MSVC OR MSVC90 OR MSVC10)
    foreach(DARTExt_LIB ${DARTExt_LIBS})
        set(DARTExt_LIBRARIES ${DARTExt_LIBRARIES} optimized ${DARTExt_LIB} debug ${DARTExt_LIB}d)
    endforeach(DARTExt_LIB)
else()
    set(DARTExt_LIBRARIES ${DARTExt_LIBS})
endif()
set(DARTExt_LIBRARIES ${DARTExt_LIBRARIES} ${DARTExt_LIBS_NO_DEBUG})

set(DARTExt_INCLUDE_DIRS ${EIGEN3_INCLUDE_DIR} ${CCD_INCLUDE_DIR} ${FCL_INCLUDE_DIR} ${Boost_INCLUDE_DIRS}
        ${GLUT_INCLUDE_DIR} ${OPENGL_INCLUDE_DIR} ${ASSIMP_INCLUDE_DIR} ${TINYXML_INCLUDE_DIR} ${TINYXML2_INCLUDE_DIR} ${urdfdom_INCLUDE_DIRS} ${SDFormat_INCLUDE_DIRS})

include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(DARTExt DEFAULT_MSG EIGEN3_INCLUDE_DIR CCD_INCLUDE_DIR FCL_INCLUDE_DIR
        GLUT_INCLUDE_DIR ASSIMP_INCLUDE_DIR TINYXML_INCLUDE_DIR TINYXML2_INCLUDE_DIR
        GLUT_LIBRARIES)

mark_as_advanced(EIGEN3_INCLUDE_DIR CCD_INCLUDE_DIR FCL_INCLUDE_DIR ASSIMP_INCLUDE_DIR TINYXML_INCLUDE_DIR TINYXML2_INCLUDE_DIR)
